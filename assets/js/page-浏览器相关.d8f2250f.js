(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{386:function(t,s,a){t.exports=a.p+"assets/img/cache.304551db.png"},654:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"浏览器相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器相关"}},[t._v("#")]),t._v(" 浏览器相关")]),t._v(" "),s("h2",{attrs:{id:"页面的渲染顺序、展示顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#页面的渲染顺序、展示顺序"}},[t._v("#")]),t._v(" 页面的渲染顺序、展示顺序")]),t._v(" "),s("h2",{attrs:{id:"dom-和-bom-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-和-bom-的区别"}},[t._v("#")]),t._v(" DOM 和 BOM 的区别")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("dom 是文档对象模型，dom 是为了操作文档出现的 API，document 是其的一个对象，dom 和文档有关，此处的文档指的是网页，也就是 html 文档，dom 和浏览器无关，他关注的是网页本身的内容")])]),t._v(" "),s("li",[s("p",[t._v("bom 是浏览器的对象模型，bom 是为了操作浏览器出现的 API，window 是其的一个对象，window 对象即为 js 访问浏览器的 API，同时在 ECMAScript 中充当 Global 对象")])])]),t._v(" "),s("h2",{attrs:{id:"reflow-和-repaint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reflow-和-repaint"}},[t._v("#")]),t._v(" reflow 和 repaint")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("reflow：当涉及到 dom 节点的布局属性发生变化时候，就会重新计算属性，浏览器会重新描绘相应的元素，此过程叫做 reflow（回流或重排）")])]),t._v(" "),s("li",[s("p",[t._v("repaint：当影响 dom 元素的可见性的属性发生变化的时候（eg：color、font），浏览器会重新描绘相应的元素，此过程叫做 repaint（重绘），因此重排必然会引起重绘")])])]),t._v(" "),s("p",[t._v("eg： 会引起 reflow 和 repaint 的一些操作")]),t._v(" "),s("ul",[s("li",[t._v("窗口大小变化")]),t._v(" "),s("li",[t._v("字体大小变化")]),t._v(" "),s("li",[t._v("样式表变化")]),t._v(" "),s("li",[t._v("元素内容变化，尤其是输入控件")]),t._v(" "),s("li",[t._v("css 伪类变化，在交互中是必然会发生")]),t._v(" "),s("li",[t._v("所有的 dom 操作")]),t._v(" "),s("li",[t._v("width、clientWidth、scrollTop 等布局高度的重新计算")])]),t._v(" "),s("p",[t._v("如何在研发的过程注意这些点")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("不要逐条行内样式修改，使用 className")])]),t._v(" "),s("li",[s("p",[t._v("避免频繁操作 dom 特别是在 jq 时代")])]),t._v(" "),s("li",[s("p",[t._v("不要频繁读取元素的集合属性，但是如果交互确实需要去做的时候也没有办法（我自己认为的哈）")])]),t._v(" "),s("li",[s("p",[t._v("绝对定位的脱离文档流，避免引起父元素以及后续元素大量的回流（特别在元素的拖动中）")])])]),t._v(" "),s("h2",{attrs:{id:"iframe-框架优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iframe-框架优缺点"}},[t._v("#")]),t._v(" iframe 框架优缺点")]),t._v(" "),s("p",[t._v("优点：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("iframe 能够 100%保证嵌入的网页展示")])]),t._v(" "),s("li",[s("p",[t._v("如果多个网页引入 iframe，那么你只需要修改 iframe 的内容，就可以实现调用的每一个页面内容的修改，方便快捷（有点组件的感觉哈）")])]),t._v(" "),s("li",[s("p",[t._v("组件化的使用，头部和尾部的使用")])]),t._v(" "),s("li",[s("p",[t._v("遇到第三方插件加载缓慢的时候可以使用 iframe")])])]),t._v(" "),s("p",[t._v("缺点：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("搜索引擎无法解读 iframe 里面的页面内容")])]),t._v(" "),s("li",[s("p",[t._v("滚动条的混乱")])]),t._v(" "),s("li",[s("p",[t._v("使用框架架构时，保证正确的导航链接")])]),t._v(" "),s("li",[s("p",[t._v("iframe 页面会增加服务器的 http 请求")])])]),t._v(" "),s("p",[t._v("使用 iframe 怎么说呢？我一般是能不用就不用的，但是有些时候又是必须要去使用的")]),t._v(" "),s("p",[t._v("注意点，如果本身懂的比较深的微前端的知识，可以往微前端上面去回答，可以对这个问题加分，如果知识知道一点皮毛可以不去做往深处引")]),t._v(" "),s("h2",{attrs:{id:"事件委托"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件委托"}},[t._v("#")]),t._v(" 事件委托")]),t._v(" "),s("p",[t._v("事件委托利用了事件冒泡，只指定一个事件处理程序，就可以管理某一类型的所有事件。所有用到按钮的事件（多数鼠标事件和键盘事件）都适合采用事件委托技术， 使用事件委托可以节省内存。")]),t._v(" "),s("p",[t._v("实现的时候通过监听父级的时间来操作子级")]),t._v(" "),s("h2",{attrs:{id:"cookie、localstorage、sessionstorage-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie、localstorage、sessionstorage-区别"}},[t._v("#")]),t._v(" cookie、localStorage、sessionStorage 区别")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("特性")]),t._v(" "),s("th",[t._v("cookie")]),t._v(" "),s("th",[t._v("localStorage")]),t._v(" "),s("th",[t._v("sessionStorage")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("由谁初始化")]),t._v(" "),s("td",[t._v("客户端或服务器，服务器可以使用 Set-Cookie 请求头。")]),t._v(" "),s("td",[t._v("客户端")]),t._v(" "),s("td",[t._v("客户端")])]),t._v(" "),s("tr",[s("td",[t._v("数据的生命周期")]),t._v(" "),s("td",[t._v("一般由服务器生成，可设置失效时间，如果在浏览器生成，默认是关闭浏览器之后失效")]),t._v(" "),s("td",[t._v("永久保存，可清除")]),t._v(" "),s("td",[t._v("仅在当前会话有效，关闭页面后清除")])]),t._v(" "),s("tr",[s("td",[t._v("存放数据大小")]),t._v(" "),s("td",[t._v("4KB")]),t._v(" "),s("td",[t._v("5MB")]),t._v(" "),s("td",[t._v("5MB")])]),t._v(" "),s("tr",[s("td",[t._v("与服务器通信")]),t._v(" "),s("td",[t._v("每次都会携带在 HTTP 头中，如果使用 cookie 保存过多数据会带来性能问题")]),t._v(" "),s("td",[t._v("仅在客户端保存")]),t._v(" "),s("td",[t._v("仅在客户端保存")])]),t._v(" "),s("tr",[s("td",[t._v("用途")]),t._v(" "),s("td",[t._v("一般由服务器生成，用于标识用户身份")]),t._v(" "),s("td",[t._v("用于浏览器缓存数据")]),t._v(" "),s("td",[t._v("用于浏览器缓存数据")])]),t._v(" "),s("tr",[s("td",[t._v("访问权限")]),t._v(" "),s("td",[t._v("任意窗口")]),t._v(" "),s("td",[t._v("任意窗口")]),t._v(" "),s("td",[t._v("当前页面窗口")])])])]),t._v(" "),s("h2",{attrs:{id:"同源策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同源策略"}},[t._v("#")]),t._v(" 同源策略")]),t._v(" "),s("p",[t._v("同源策略可防止 js 发生跨域请求，源被定义为 URI，主机名和端口号的组合。此策略可防止页面的恶意脚本通过该页面的文档对象模型，访问另一个网页上的敏感数据")]),t._v(" "),s("p",[t._v("同源策略是浏览器行为，目的是为了浏览器的安全问题")]),t._v(" "),s("h2",{attrs:{id:"如何理解面向对象-以及如何理解函数式编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何理解面向对象-以及如何理解函数式编程"}},[t._v("#")]),t._v(" 如何理解面向对象，以及如何理解函数式编程")]),t._v(" "),s("h2",{attrs:{id:"浏览器的渲染过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的渲染过程"}},[t._v("#")]),t._v(" 浏览器的渲染过程")]),t._v(" "),s("ol",[s("li",[t._v("DNS 的查询(也就是根据域名去找对应的 ip 地址)")]),t._v(" "),s("li",[t._v("TCP 的连接(连接建立、数据传送以及连接释放)")]),t._v(" "),s("li",[t._v("HTTP 请求即响应")]),t._v(" "),s("li",[t._v("服务端响应")]),t._v(" "),s("li",[t._v("客户端渲染")])]),t._v(" "),s("p",[t._v("渲染过程如下：")]),t._v(" "),s("ol",[s("li",[t._v("解析 html 生成 dom 树")]),t._v(" "),s("li",[t._v("解析 css 生成 cssom 树")]),t._v(" "),s("li",[t._v("将 dom 树和 cssom 树规则合并在一起生成渲染树")]),t._v(" "),s("li",[t._v("遍历渲染树开始布局，计算每一个节点的位置信息等")]),t._v(" "),s("li",[t._v("将渲染树每个节点绘制到屏幕")])]),t._v(" "),s("h2",{attrs:{id:"浏览器的缓存机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的缓存机制"}},[t._v("#")]),t._v(" 浏览器的缓存机制")]),t._v(" "),s("p",[t._v("浏览器的缓存机制也就是我们说的 HTTP 缓存机制，其机制是根据 HTTP 抱文的缓存标识进行的，HTTP 抱文分为两种：")]),t._v(" "),s("ol",[s("li",[t._v("HTTP 请求(Request)抱文")]),t._v(" "),s("li",[t._v("HTTP 响应(Response)抱文")])]),t._v(" "),s("p",[t._v("浏览器与服务器通信的方式为应答模式，即为："),s("a",{attrs:{href:"/posts/internet/TCP%E7%9A%843%E6%AC%A1%E6%8F%A1%E6%89%8B"}},[t._v("浏览器发起 HTTP 请求 – 服务器响应该")]),t._v("请求，那么浏览器第一次向服务器发起该请求后拿到请求结果，会根据响应报文中 HTTP 头的缓存标识，决定是否缓存结果，是则将请求结果和缓存标识存入浏览器缓存中")]),t._v(" "),s("ol",[s("li",[t._v("浏览器每次发起请求，都会先在浏览器缓存中查找该请求的结果以及缓存标识")]),t._v(" "),s("li",[t._v("浏览器每次拿到返回的请求结果都会将该结果和缓存标识存入浏览器缓存中")])]),t._v(" "),s("p",[t._v("缓存分为强制缓存和协商缓存")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("强制缓存")]),t._v(" "),s("ul",[s("li",[t._v("HTTP 响应报文中的 expires--"),s("code",[t._v("expires: Wed, 21 Oct 2020 03:25:41 GMT")]),t._v("，这个是一个绝对时间，在指定的时间前请求缓存生效")]),t._v(" "),s("li",[t._v("HTTP 响应报文中的 Cache-Control--"),s("code",[t._v("cache-control: max-age=600")]),t._v("，这是一个相对值，单位 s，也就是 600s 之内再次请求会直接使用缓存，强制缓存生效\n"),s("blockquote",[s("p",[t._v("在无法确定客户端的时间是否与服务端的时间同步的情况下，Cache-Control 相比于 expires 是更好的选择，所以同时存在时，只有 Cache-Control 生效")])])])]),t._v(" "),s("p",[t._v("强制缓存的返回状态码为： 200")]),t._v(" "),s("p",[t._v("但是看返回值中的 size 栏中有"),s("code",[t._v("from memory cache")]),t._v("和"),s("code",[t._v("from disk cache")]),t._v("：分别是内存中的缓存和硬盘中的缓存，浏览器对与两者的读取顺序是： memory -> disk")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("内存缓存：快速读取（直接写入进程的内存中，方便下次使用和快速读取）和时效性（也就是一旦关闭进程关闭，内存就会清空）")])]),t._v(" "),s("li",[s("p",[t._v("直接将缓存写入硬盘文件中，读取缓存需要对硬盘文件进行 I/O 操作，读取是复杂的，速度也是比内存慢的")])])])]),t._v(" "),s("li",[s("p",[t._v("协商缓存(协商缓存就是强制缓存失效后，浏览器携带缓存标识向服务器发起请求，由服务器根据缓存标识决定是否使用缓存的过程)")]),t._v(" "),s("ul",[s("li",[t._v("协商缓存生效，返回 304")]),t._v(" "),s("li",[t._v("协商缓存失效，返回 200 和请求结果结果")])])])]),t._v(" "),s("p",[t._v("协商缓存的表示在响应的报文中为："),s("code",[t._v("Last-Modified / If-Modified-Since")]),t._v(" 和 "),s("code",[t._v("Etag / If-None-Match")]),t._v("， 其中 "),s("code",[t._v("Etag / If-None-Match")]),t._v(" > "),s("code",[t._v("Last-Modified / If-Modified-Since")])]),t._v(" "),s("ul",[s("li",[t._v("也就是说： 强制缓存优先于协商缓存进行，若强制缓存(Expires 和 Cache-Control)生效则直接使用缓存，若不生效则进行协商缓存(Last-Modified / If-Modified-Since 和 Etag / If-None-Match)，协商缓存由服务器决定是否使用缓存，若协商缓存失效，那么代表该请求的缓存失效，重新获取请求结果，再存入浏览器缓存中；生效则返回 304，继续使用缓存")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(386),alt:"图解"}})]),t._v(" "),s("h2",{attrs:{id:"浏览器的垃圾回收机制与内存泄漏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的垃圾回收机制与内存泄漏"}},[t._v("#")]),t._v(" 浏览器的垃圾回收机制与内存泄漏")]),t._v(" "),s("p",[t._v("浏览器对 js 具有自动垃圾回收机制(GC: Garbage COllecation)，也就是说，执行环境会负责管理代码执行过程中使用的内存，其原理："),s("em",[t._v("垃圾收集器会定期（周期性）找出那些不再继续使用的变量，然后释放其内存")]),t._v("。但是这个过程不是实时的，因为其开销比较大并且 GC 时停止响应其他操作，所以垃圾回收器会按照固定的时间间隔周期性的执行。")]),t._v(" "),s("p",[t._v("两种实现方式："),s("code",[t._v("标记清除")]),t._v("和"),s("code",[t._v("引用计数")]),t._v("。引用计数不太常用，标记清除较为常用。")]),t._v(" "),s("h3",{attrs:{id:"_1-标记清除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-标记清除"}},[t._v("#")]),t._v(" 1. 标记清除")]),t._v(" "),s("p",[t._v("js 中最常用的垃圾回收方式就是标记清除。当变量进入环境时，变量“进入环境”，被标记，离开环境时，被回收")]),t._v(" "),s("p",[t._v("垃圾回收器在运行的时候会给存储在内存中的所有变量都加上标记，然后它会去掉环境中的变量以及被环境中的变量引用的变量的标记（闭包），而在此之后再被加上标记的变量将被视为准备删除的变量，原因是环境中的变量已经无法访问到这些变量了。最后垃圾回收器完成内存清除工作，销毁那些带标记的值并回收它们所占用的内存空间。\n到目前为止，IE9+、Firefox、Opera、Chrome、Safari 的 js 实现使用的都是标记清除的垃圾回收策略或类似的策略，只不过垃圾收集的时间间隔互不相同。")]),t._v(" "),s("h3",{attrs:{id:"_2-引用计数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-引用计数"}},[t._v("#")]),t._v(" 2. 引用计数")]),t._v(" "),s("p",[t._v("引用计数的含义是跟踪记录每个值被引用的次数。当声明了一个变量并将一个引用类型值赋给该变量时，则这个值的引用次数就是 1。如果同一个值又被赋给另一个变量，则该值的引用次数加 1。相反，如果包含对这个值引用的变量又取得了另外一个值，则这个值的引用次数减 1。当这个值的引用次数变成 0 时，则说明没有办法再访问这个值了，因而就可以将其占用的内存空间回收回来。这样，当垃圾回收器下次再运行时，它就会释放那些引用次数为 0 的值所占用的内存。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a的引用次数为0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a的引用次数加1，为1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a的引用次数再加1，为2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a的引用次数减1，为1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("使用这种方法看起来好像很好理解，但当遇到循环引用的时候就很难受了")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" element "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some_element"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nelement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("outerFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"element"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("innerFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("第二个例子：obj 引用了 "),s("code",[t._v("document.getElementById('element')")]),t._v("，onclick 方法会引用外部环境中的变量，自然也包括 obj，这种隐蔽的循环引用很难发现的")]),t._v(" "),s("p",[t._v("遇到这样的情况我们需要手动去解除")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("myObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("element "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nelement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nwindow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("outerFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"element"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("innerFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("在 "),s("code",[t._v("IE8-")]),t._v("格外需要注意这些事情，不过现在我们开发需要兼容 "),s("code",[t._v("IE8-")]),t._v("的情况正在一步步减少")]),t._v(" "),s("h3",{attrs:{id:"内存管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存管理"}},[t._v("#")]),t._v(" 内存管理")]),t._v(" "),s("ol",[s("li",[t._v("何时触发垃圾回收？")])]),t._v(" "),s("p",[t._v("垃圾回收器周期性运行，如果分配的内存非常多，那么回收工作也会很艰巨，确定垃圾回收时间间隔就变成了一个值得思考的问题。IE6 的垃圾回收是根据内存分配量运行的，当环境中存在 256 个变量、4096 个对象、64k 的字符串任意一种情况的时候就会触发垃圾回收器工作，看起来很科学，不用按一段时间就调用一次，有时候会没必要，这样按需调用不是很好吗？但是如果环境中就是有这么多变量等一直存在，现在脚本如此复杂，很正常，那么结果就是垃圾回收器一直在工作，这样浏览器就没法儿玩儿了。")]),t._v(" "),s("p",[t._v("微软在 IE7 中做了调整，触发条件不再是固定的，而是动态修改的，初始值和 IE6 相同，如果垃圾回收器回收的内存分配量低于程序占用内存的 15%，说明大部分内存不可被回收，设的垃圾回收触发条件过于敏感，这时候把临街条件翻倍，如果回收的内存高于 85%，说明大部分内存早就该清理了，这时候把触发条件置回。这样就使垃圾回收工作职能了很多")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("合理的 GC 方案")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("基本方案\nJavascript 引擎基础 GC 方案是（simple GC）：mark and sweep（标记清除），即：")]),t._v(" "),s("ol",[s("li",[t._v("遍历所有可访问的对象。")]),t._v(" "),s("li",[t._v("回收已不可访问的对象。")])])]),t._v(" "),s("li",[s("p",[t._v("GC 缺陷\n和其他语言一样，javascript 的 GC 策略也无法避免一个问题：GC 时，停止响应其他操作，这是为了安全考虑。而 Javascript 的 GC 在 100ms 甚至以上，对一般的应用还好，但对于 JS 游戏，动画对连贯性要求比较高的应用，就麻烦了。这就是新引擎需要优化的点：避免 GC 造成的长时间停止响应。")])]),t._v(" "),s("li",[s("p",[t._v("GC 优化策略")]),t._v(" "),s("ol",[s("li",[t._v("分代回收：区分“临时”与“持久”对象，多回收“临时对象”区（young generation），少回收“持久对象”区（tenured generation），减少每次需要遍历的对象")]),t._v(" "),s("li",[t._v("增量 GC：增加回收次数，牺牲的是中断次数")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);